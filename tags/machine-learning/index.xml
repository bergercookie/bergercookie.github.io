<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Machine Learning on Bergercookie's Thoughtstream</title><link>https://bergercookie.dev/tags/machine-learning/</link><description>Recent content in Machine Learning on Bergercookie's Thoughtstream</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://bergercookie.dev/tags/machine-learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Cracking the OpenCV Applications Course - Project 1</title><link>https://bergercookie.dev/post/opencv-project1/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>https://bergercookie.dev/post/opencv-project1/</guid><description>This is a writeup of my first assignment for the &amp;ldquo;Computer Vision II: Applications&amp;rdquo; course.
For this assignment, I&amp;rsquo;m given an image of a girl, and I have to add 2 new features to it:
Apply lipstick Applying blush Here&amp;rsquo;s the original image that we&amp;rsquo;ll be working on:
Initialisation actions We first load and initialise all the necessary modules and objects that we&amp;rsquo;ll need
1 2 3 4 5 6 7 8 # various imports import cv2, sys, dlib, time, math import numpy as np import matplotlib.</description></item><item><title>üõ†Ô∏è Scratchpad - CV Applications II Course by OpenCV</title><link>https://bergercookie.dev/post/opencv-applications-ii/</link><pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate><guid>https://bergercookie.dev/post/opencv-applications-ii/</guid><description>Computer Vision Applications using OpenCV Facial Landmark Detection Improve the speed of Facial Landmark Detection: Use face detection that comes with OS - if possible (e.g., Android, iOS) Skip frames - e.g,. run every 3 frames Downscale image, detect faces there &amp;hellip; then propagate bboxes to original image (dividing the coordinates by the scale used for resizing the original frame.). Then just do landmark detection on original image and computed bounding box Improve landmark stabilisation Weighted Moving Average - Average the landmark point location over a small time window Kalman Filtering Optical Flow Code snippets OpenCV - Rescale an image - keep ratio import cv2 # Load image img = cv2.</description></item><item><title>üõ†Ô∏è Scratchpad - Machine Learning</title><link>https://bergercookie.dev/post/machine-learning/</link><pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate><guid>https://bergercookie.dev/post/machine-learning/</guid><description>Definition: The science/art of programming computers so that they can learn from data
Popular ML Algorithms Linear &amp;amp; Polynomial Regression Logistic Regression k-nearest Neighbors Support Vector machines Decision Trees Random Forests Ensemble methods Neural Networks Architectures Feedforward Neural Nets Convolutional Nets Recurrent Nets Long short-term memory (LSTM) nets Autoencoders Multi-Layer Perceptons (MLPs) Famous Papers Machine Learning on handwritten digits - 2006 - &amp;lt;www.cs.toronto.edu/~hinton&amp;gt; The Unreasonable Effectiveness of Data - 2009 Useful links - resources www.</description></item></channel></rss>